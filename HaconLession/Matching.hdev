<?xml version="1.0" encoding="UTF-8"?>
<hdevelop file_version="1.2" halcon_version="18.05.0.1">
<procedure name="main">
<interface/>
<body>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="2">* Matching 01: ************************************************</c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="3">* Matching 01: BEGIN of generated code for model initialization</c>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="4">* Matching 01: ************************************************</c>
<l as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="5">set_system ('border_shape_models', 'false')</l>
<c as_id="matching" as_name="Matching 01" as_grp="[0]" as_ord="6">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,1]" as_ord="1">* Matching 01: Obtain the model image</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,1]" as_ord="2">read_image (Image, 'C:/Users/Chanru/Desktop/Class/bl/bl1.bmp')</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,2]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,2]" as_ord="2">* Matching 01: Build the ROI from basic regions</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,2]" as_ord="3">gen_rectangle1 (ModelRegion, 497.821, 641.757, 642.431, 1041.33)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,3]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,3]" as_ord="2">* Matching 01: Reduce the model template</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,3]" as_ord="3">reduce_domain (Image, ModelRegion, TemplateImage)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,4]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,1,4]" as_ord="2">* Matching 01: Create the shape model</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,1,4]" as_ord="3">create_shape_model (TemplateImage, 5, rad(0), rad(360), rad(0.5596), ['none','no_pregeneration'], 'use_polarity', [36,51,10], 3, ModelID)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,2]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,2]" as_ord="2">* Matching 01: Get the model contour for transforming it later into the image</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,2]" as_ord="3">get_shape_model_contours (ModelContours, ModelID, 1)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="2">* Matching 01: Get the reference position</c>
<l as_id="matching" as_name="Matching 01" as_grp="[1,5]" as_ord="3">area_center (ModelRegion, ModelRegionArea, RefRow, RefColumn)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[2]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[2]" as_ord="2">* Matching 01: END of generated code for model initialization</c>
<c as_id="matching" as_name="Matching 01" as_grp="[3,1]" as_ord="1">* Matching 01:  * * * * * * * * * * * * * * * * * * * * * * *</c>
<c as_id="matching" as_name="Matching 01" as_grp="[3,1]" as_ord="2">* Matching 01: BEGIN of generated code for model application</c>
<c as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="2">* Matching 01: Loop over all specified test images</c>
<l as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="3">TestImages := ['C:/Users/Chanru/Desktop/Class/bl/bl1.bmp','C:/Users/Chanru/Desktop/Class/bl/bl2.bmp','C:/Users/Chanru/Desktop/Class/bl/bl3.bmp','C:/Users/Chanru/Desktop/Class/bl/bl4.bmp','C:/Users/Chanru/Desktop/Class/bl/bl5.bmp','C:/Users/Chanru/Desktop/Class/bl/bl6.bmp','C:/Users/Chanru/Desktop/Class/bl/bl7.bmp','C:/Users/Chanru/Desktop/Class/bl/bl8.bmp','C:/Users/Chanru/Desktop/Class/bl/bl9.bmp']</l>
<l as_id="matching" as_name="Matching 01" as_grp="[4]" as_ord="4">for T := 0 to 8 by 1</l>
<c as_id="matching" as_name="Matching 01" as_grp="[5]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[5]" as_ord="2">    * Matching 01: Obtain the test image</c>
<l as_id="matching" as_name="Matching 01" as_grp="[5]" as_ord="3">    read_image (Image, TestImages[T])</l>
<c as_id="matching" as_name="Matching 01" as_grp="[6]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[6]" as_ord="2">    * Matching 01: Find the model</c>
<l as_id="matching" as_name="Matching 01" as_grp="[6]" as_ord="3">    find_shape_model (Image, ModelID, rad(0), rad(360), 0.8, 1, 0.5, 'least_squares', [5,1], 0.9, Row, Column, Angle, Score)</l>
<c as_id="matching" as_name="Matching 01" as_grp="[9,1]" as_ord="1">    * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[9,1]" as_ord="2">    * Matching 01: Code for rectification of the image</c>
<c as_id="matching" as_name="Matching 01" as_grp="[9,1]" as_ord="3">    * Matching 01: Calculate an inverse hom_mat2d for each of the matching results</c>
<l as_id="matching" as_name="Matching 01" as_grp="[9,2]" as_ord="1">    for I := 0 to |Score| - 1 by 1</l>
<l as_id="matching" as_name="Matching 01" as_grp="[9,3]" as_ord="1">        hom_mat2d_identity (RectificationHomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[9,4]" as_ord="1">        hom_mat2d_translate (RectificationHomMat2D, RefRow-Row[I], RefColumn-Column[I], RectificationHomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[9,4]" as_ord="2">        hom_mat2d_rotate (RectificationHomMat2D, -Angle[I], RefRow, RefColumn, RectificationHomMat2D)</l>
<l as_id="matching" as_name="Matching 01" as_grp="[9,5]" as_ord="1">        affine_trans_image (Image, RectifiedImage, RectificationHomMat2D, 'constant', 'false')</l>
<c as_id="matching" as_name="Matching 01" as_grp="[9,6]" as_ord="1">        * </c>
<c as_id="matching" as_name="Matching 01" as_grp="[9,6]" as_ord="2">        * Matching 01: Insert your code using the rectified image here</c>
<l>        stop()</l>
<l as_id="matching" as_name="Matching 01" as_grp="[9,7]" as_ord="1">    endfor</l>
<l as_id="matching" as_name="Matching 01" as_grp="[10]" as_ord="1">endfor</l>
<c as_id="matching" as_name="Matching 01" as_grp="[11]" as_ord="1">* </c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="1">* Matching 01: *******************************************</c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="2">* Matching 01: END of generated code for model application</c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="3">* Matching 01: *******************************************</c>
<c as_id="matching" as_name="Matching 01" as_grp="[12]" as_ord="4">* </c>
</body>
<docu id="main">
<parameters/>
</docu>
</procedure>
</hdevelop>
